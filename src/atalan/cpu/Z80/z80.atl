type
   byte:0..255
   card:0..65535
   int:-32768..32767
   sbyte:-128..127
   byte1:byte() or sbyte()

cpu:scope =
  a:byte
  b:byte
  c:byte
  d:byte
  e:byte
  h:byte
  l:byte
  bc@(b,c)
  de@(d,e)
  hl@(h,l)
  ix:card
  iy:card

rule alloc %A:byte                               = "   .ds 1"
rule alloc %A:card                               = "   .ds 2"
rule alloc %A:long                               = "   .ds 3"
rule alloc %A:adr                                = "   .ds 2"
rule alloc %A:-128..127                          = "   .ds 1"


rule let %A:byte, %B:byte =
	let _a, %B
	let %A, _a
	
rule let _a, %A:byte1  = "   ld a, %A"
rule let %A:byte1, _a  = "   ld %A, a"
 