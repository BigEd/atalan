*****************************
ATALAN Compiler Optimizations
*****************************

Atalan compiler performs extensive code optimizations. As 6502 family processors are
very irregular, common optimization methods had to be tailored 
and some special techniques had to be developed to fit the 6502 instruction set.

For example, due to low number of registers (A,X,Y) and their specialized functions,
usual register allocation technique could not be used.

===========================
Local variable optimization
===========================

Procedure local variables and arguments are internaly allocated as global variables.
Atalan analyzes procedure call chain and if possible, reuses global variable
space to several procedures.

Processor registers are used to pass arguments in & out of procedure, if possible.
 

===============================
Instruction level optimizations
===============================

- multiplication, division and module is performed using shift or and when applicable
- when comparing variable that has only two possible value and one of them is 0, always compare to zero

===================
Local optimizations
===================

- constant folding
- constant propagation
- common subexpression elimination
- live variable analysis
- optimal operation is chosen according to variable range
- variable merging  

==========================
Control flow optimizations
==========================

- unused procedure removal
- goto elimination (eliminate goto to goto)
- dead code elimination
- conditional jump around jump simplification
- procedure arguments are implemented using 'global' variables (no stack)

==================
Loop optimizations
==================

- most common variables in loop are replaced by registers (if possible)

===============
Macro expansion
===============

- it is possible to write macros that are expanded in place

==================
Data-flow analysis
==================

- live variable analysis
